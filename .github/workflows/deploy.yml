name: Deploy to Aliyun Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: https://registry.npmjs.org/
          cache: 'pnpm'
      
      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: 🌌 Build Valaxy Blog
        run: pnpm run build
        env:
          NODE_OPTIONS: --max-old-space-size=4096
      
      - name: 📊 Check build output
        run: |
          echo "=== Build completed ==="
          ls -lh dist/
          echo "=== Total size ==="
          du -sh dist/
      
      - name: 📦 Compress dist
        run: tar -czf dist.tar.gz dist
      
      - name: 📤 Upload to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          source: "dist.tar.gz"
          target: "/tmp/"
          timeout: 10m
      
      - name: 🚀 Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 10m
          script: |
            set -e
            echo "=== Starting deployment ==="
            cd /www/wwwroot/blog_valaxy
            
            # Backup current dist
            if [ -d "dist" ]; then
              echo "Backing up current dist..."
              rm -rf dist.backup
              mv dist dist.backup
            fi
            
            # Extract new dist
            echo "Extracting new build..."
            tar -xzf /tmp/dist.tar.gz
            
            # Set permissions
            echo "Setting permissions..."
            chown -R www:www dist
            chmod -R 755 dist
            
            # Clean up
            rm -f /tmp/dist.tar.gz
            
            # Reload nginx
            echo "Reloading nginx..."
            nginx -t && nginx -s reload
            
            echo "✅ Deployment completed successfully!"
            echo "📊 Deployed files:"
            ls -lh dist/ | head -n 10
      
      - name: 🎉 Notification
        if: success()
        run: |
          echo "✅ Successfully deployed to Aliyun server!"
          echo "🌐 Site: https://kylaan.top"
      
      - name: ❌ Failure notification
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          echo "Please check the logs above for errors."
